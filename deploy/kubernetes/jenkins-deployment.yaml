apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
    tiers: webapp
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: slave
    port: 50000
    targetPort: 50000
    protocol: TCP
  selector:
    app: jenkins
    tiers: webapp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-data
  namespace: jenkins
  labels:
    app: jenkins
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-log
  namespace: jenkins
  labels:
    app: jenkins
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins
        tiers: webapp
    spec:
      containers:
      - image: fjudith/jenkins
        name: jenkins
        env:
        - name: JAVA_OPTS
          value: '"-Djenkins.slaves.NioChannelSelector.disabled=true -Dhudson.security.csrf.requestfield=Jenkins-Crumb"'
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 50000
          name: slave
        volumeMounts:
        - name: jenkins-data
          mountPath: /var/jenkins_home
        - name: jenkins-log
          mountPath: /var/log/jenkins
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-data
      - name: jenkins-log
        persistentVolumeClaim:
          claimName: jenkins-log
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: jenkins
  labels:
    app: jenkins
    tiers: frontend
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: jenkins
    tiers: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins
        tiers: frontend
    spec:
      containers:
      - image: fjudith/jenkins:nginx
        name: nginx
        ports:
        - containerPort: 80
          name: http
---
##########################################################################
# Jenkins Slave
##########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-slave
  namespace: jenkins
  labels:
    app: jenkins
    tiers: compiler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins
        tiers: compiler
    spec:
      containers:
      - image: fjudith/jenkins:slave
        securityContext:
          privileged: true
        name: jenkins-slave
        env:
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: JENKINS_SECRET
          value: 8aaf6528f1137635c9a5f6cdaa99a6efb1dde1868e486086500129bc39ccc467
        - name: JENKINS_AGENT_NAME
          value: agent1
      volumes:
      - name: docker-sock-volume
        hostPath:
          # location on host
          path: /var/run/docker.sock
          # this field is optional
          type: File
---